     1                                  bits 32
     2                                  
     3                                  
     4                                  segment .data
     5 00000000 496E74726F64756365-         input db 'Introduceti un sir de caractere: ', 0
     5 00000009 746920756E20736972-
     5 00000012 206465206361726163-
     5 0000001B 746572653A2000     
     6                                          ;mesaj
     7 00000022 257300                      format db '%s', 0
     8                                          ;formatul inputului
     9 00000025 <res 00000064>              sirinput resb 100
    10                                          ;sirul de intrare
    11 00000089 <res 00000064>              sirmici resb 100
    12                                          ;sirul unde se vor pune literele mici
    13 000000ED <res 00000064>              sirmari resb 100
    14                                          ;sirul unde se vor pune literele mari
    15                                      
    16                                  
    17                                  section .text
    18                                      global start
    19                                      extern exit, printf, scanf
    20                                      import exit msvcrt.dll
    21                                      import printf msvcrt.dll
    22                                      import scanf msvcrt.dll
    23                                      
    24                                  start:
    25 00000000 68[00000000]                push input
    26 00000005 FF15[00000000]              call [printf]
    27 0000000B 83C404                      add esp, 4
    28                                      
    29 0000000E 8D05[25000000]              lea eax, [sirinput]
    30 00000014 50                          push eax
    31 00000015 8D05[22000000]              lea eax, [format]
    32 0000001B 68[22000000]                push format
    33 00000020 FF15[00000000]              call [scanf]
    34 00000026 83C408                      add esp, 8
    35                                      
    36 00000029 BE[25000000]                mov esi, sirinput   ;inceputul sirului de intrare
    37 0000002E BF[89000000]                mov edi, sirmici   ;inceputul sirului de litere mici
    38 00000033 BA[ED000000]                mov edx, sirmari   ;inceputul sirului de litere mari
    39                                  
    40                                      
    41                                  citire:
    42 00000038 8A06                        mov al, [esi]
    43 0000003A 3C24                        cmp al, '$'
    44                                          ;verifica daca s-a ajuns la finalul inputului   
    45 0000003C 741B                        je end_program
    46                                      
    47 0000003E 3C61                        cmp al, 'a'
    48 00000040 7C09                        jl not_lowercase
    49                                      
    50 00000042 3C7A                        cmp al, 'z'
    51 00000044 7F05                        jg not_lowercase
    52                                      
    53 00000046 8807                        mov [edi], al
    54 00000048 47                          inc edi
    55 00000049 EB0B                        jmp continue
    56                                      
    57                                  not_lowercase:
    58 0000004B 3C41                        cmp al, 'A'
    59 0000004D 7C07                        jl continue
    60                                      
    61 0000004F 3C5A                        cmp al, 'Z'
    62 00000051 7F03                        jg continue
    63                                      
    64 00000053 8802                        mov [edx], al
    65 00000055 42                          inc edx
    66                                      
    67                                  continue:
    68 00000056 46                          inc esi
    69 00000057 EBDF                        jmp citire
    70                                      
    71                                      
    72                                      
    73                                  end_program:
    74 00000059 C60700                      mov byte [edi], 0
    75 0000005C C60200                      mov byte [edx], 0
    76                                  
    77 0000005F FF35[89000000]              push dword [sirmici]
    78 00000065 FF35[22000000]              push dword [format]
    79 0000006B FF15[00000000]              call [printf]
    80 00000071 83C408                      add esp, 8
    81                                      
    82 00000074 FF35[ED000000]              push dword [sirmari]
    83 0000007A FF35[22000000]              push dword [format]
    84 00000080 FF15[00000000]              call [printf]
    85 00000086 83C408                      add esp, 8
    86                                      
    87 00000089 6A00                        push dword 0
    88 0000008B FF15[00000000]              call [exit]
    89                                      
    90                                  
    91                                  ;Se citeste de la tastatura un sir de caractere (litere mici si litere mari, cifre, caractere speciale, etc). Sa se formeze un sir nou doar cu literele mici si un sir nou doar cu literele mari. Sa se afiseze cele 2 
