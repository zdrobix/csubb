     1                                  bits 32 
     2                                  global siruri 
     3                                  
     4                                  segment code use32=code public
     5                                  
     6                                  siruri:
     7                                  
     8                                      ;is esp avem adresa de revenire
     9                                      ;in esp + 4 este adresa sirului de intrare
    10                                      ;esp + 8 = lungimea lui s
    11                                      ;esp + 12 = adresa sirului cu lit_mici
    12                                      ;esp + 16 = adresa sirului cu lit_mari
    13                                  
    14                                  
    15                                      ;se iau de pe stiva parametrii
    16 00000000 FC                          cld
    17                                          ;direction flag = 0
    18 00000001 8B742404                    mov esi,[esp+4]
    19                                          ;se pune adresa sirului de intrare
    20 00000005 8B4C2408                    mov ecx,[esp+8] 
    21                                          ;lungimea sirului de intrare
    22 00000009 BB00000000                  mov ebx,0
    23                                          ;lungimea lui lit_mici init = 0
    24 0000000E BA00000000                  mov edx,0
    25                                          ;lungimea lui lit_mari init = 0
    26                                  
    27                                      for:
    28                                  
    29 00000013 66AD                            lodsw
    30                                              ;ax = caracter, inc esi 
    31                                  
    32 00000015 EB02                            jmp comp_litera_mica_z
    33                                          
    34 00000017 EB34                            jmp fin
    35                                          
    36                                          comp_litera_mica_z:
    37 00000019 6683F87A                        cmp ax, 'z'
    38 0000001D 7E00                            jle comp_litera_mica_a
    39                                          
    40                                          comp_litera_mica_a:
    41 0000001F 6683F861                        cmp ax, 'a'
    42 00000023 7D10                            jge litera_mica
    43 00000025 7C00                            jl comp_litera_mare_Z
    44                                          
    45                                          
    46                                          comp_litera_mare_Z:
    47 00000027 6683F85A                        cmp ax, 'Z'
    48 0000002B 7E00                            jle comp_litera_mare_A
    49                                          
    50                                          comp_litera_mare_A:
    51 0000002D 6683F841                        cmp ax, 'A'
    52 00000031 7D0F                            jge litera_mare
    53 00000033 7C18                            jl fin
    54                                          
    55                                          
    56                                          litera_mica:
    57 00000035 8B7C240C                        mov edi,[esp+12]
    58                                              ;in edi va fi adresa sirului lit_mici
    59 00000039 01DF                            add edi,ebx
    60                                              ;pozitia in sirul lit_mici baza ebx
    61 0000003B 01DF                            add edi,ebx
    62                                              ;se adauga inca odata pentru a avea lungimea de 2 octeti
    63 0000003D 66AB                            stosw
    64                                              ;ax = adresa sirului lit_mici
    65 0000003F 43                              inc ebx
    66                                              ;se trece la urmatorul caracter din sirul lit_mici
    67 00000040 EB0B                            jmp fin
    68                                          
    69                                          litera_mare:
    70 00000042 8B7C2410                        mov edi,[esp+16]
    71                                              ;in edi va fi adresa sirului lit_mici
    72 00000046 01D7                            add edi,edx
    73                                              ;pozitia in sirul lit_mari pe baza edx
    74 00000048 01D7                            add edi,edx
    75                                              ;se adauga inca odata pentru a avea lungimea de 2 octeti
    76 0000004A 66AB                            stosw
    77                                              ;ax = adresa sirului lit_mari
    78 0000004C 42                              inc edx
    79                                              ;se trece la urmatorul caracter din sirul lit_mari
    80                                          
    81                                          fin:
    82                                          
    83 0000004D E2C4                        loop for
    84                                  
    85 0000004F C3                      ret
